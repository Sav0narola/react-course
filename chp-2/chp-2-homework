As far as i understood the CBA, it takes all dependencies, styles and other required stuff (yea, what exactly?) and encapsulates them. this is a modular design approach supporting the concept of SoC/JSX instead of splitting an application by technologies. you end up with a single container including all the required methods and interaction information for the component in order to run and fullfil his role in the application. if you would visualize this architecture you whould split it horizontally by doing so in opposition to the mvc architecture, which splits the application and it's dependencies vertically. this encapsulation is paired with the functionality of the react-routing (?) to share information among the different components or the application as a whole. this gives you the advantage of reuseable, little components including the importent option to change the passed information and properties by interacting with a single file of code (obviously this has a huge impact on software development side, especially if you're not working solo, which is the case most of the time).
